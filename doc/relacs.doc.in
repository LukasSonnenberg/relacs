/*!
\mainpage RELACS - Realtime ELectrophysiological data Acquisition, Control, and Stimulation

\version @VERSION@
\date @RELACSDATE@
\author Jan Benda

\section maincontent Content

- \ref intro
- \ref usingrelacs (\ref startrelacs, \ref interface, \ref keys, \ref menus, \ref macros, \ref datafiles, \ref relacsconfig)
- \ref pluginconcept
- \ref createrepros (\ref createcode,\ref setupmakefile,\ref compilerepro,\ref addrepro,\ref debugrepro)
- \ref relacsprogram (\ref relacsdirectories, \ref relacsmakefile, \ref naming, \ref relacsstructure)
- \ref relacsutilities


\section intro Introduction

RELACS is a user interface for data aquisition.
It is controllable and customizable to your specific
experimental setup by C++ based plugins.
The RePro-plugins ("Research Programs") allow you to
analyze the acquired data and to generate stimuli online
in closed loop.

What RELACS is good for and who should use RELACS... and who should NOT use RELACS.


\section usingrelacs Using RELACS

\subsection startrelacs Starting RELACS

Simply type in 
\code
$> relacs
\endcode
to start RELACS.
RELACS then tries to find the hardware drivers for the data-acquisition board
and the attenuators.
If all necessary drivers are found, RELACS immediately starts
reading in data from the data-acquisition board.
If at least one driver is missing or cannot be opened
(maybe the device is switched off?)
RELACS opens in idle mode.

If you want to force RELACS to start in the simulation mode use the "-3"
option
\code
$> relacs -3
\endcode
(the "3" is in german pronounced almost like "dry"
which stands for the simulation mode as the opposite of the "wet" mode
for acquiring real data from a wet biological experiment).

\c relacs is a small shell script. Its main purpose is to set
the environment variable \c LD_LIBRARY_PATH to the directories
where the %RePros and other plugins are, so that RELACS can find them.
It is created from the file \c utils/relacsscript whenever you compile RELACS.
You can also specify a logfile by setting the variable \c LOGFILE in \c relacsscript
in order to store all messages and warnings that are usually written to 
\c stdout and \c stderr into a file.
For more details, try
\code
$> relacs --help
\endcode

\par Command Line Options

- \c -3: Start RELACS in simulation mode
- \c -f: Show RELACS in full-screen mode
	 (be careful when using older Qt version (Version < 3.0)!)

See \c relacs \c --help for more options.


\subsection interface User Interface

There are four main widgets (from left to right, top to bottom)
\arg Filters and Detectors
\arg PlotTrace
\arg Control
\arg RePros

The buttons at the bottom are the
\arg Macros

\par The PlotTrace widget
This widget in the upper right 
shows the recorded voltage traces (green solid lines)
together with the detected events (red vertical lines, all sorts of points).
The vertical white lines mark the time of a stimulus output.
The time axis is in milliseconds relative to the last stimulus.
There are three display modes:
- \a fixed: The time axis is fixed relative to the last stimulus.
  This mode can be activated by pressing \c Home / \c Pos1
  or clicking the 
  \image html fixedbutton.png 
  button.
- \a continuous: The time axis moves to the left and the most recent data is always
  shown to the very right.
  This mode can be activated by pressing \c End or clicking the 
  \image html continuousbutton.png 
  button.
- \a view: The time axis is fixed and will not be shifted by a new stimulus
  (as it is the case for the "fixed" mode).
  This mode can be activated by pressing \c PageUp, \c PageDown,
  \c Ctrl+PageUp, \c Ctrl+PageDown, \c Ctrl+Home, and \c Ctrl+End.
  Use these keys to shift the time axis to the left, to the right, 
  to the first data, to the most recent data, 
  to the beginning of the most recent stimulus, and
  to the most recent data, respectively.
.
In all modes, the \c - and \c + keys expand and shrink the visible time range,
respectively.

\par
The plots for each voltage trace can be closed by pressing \c 1, \c 2, ...
according to the number of the trace (\c 1 is the first, topmost trace).
A closed plot can be made visible again by pressing the number again.

\par The FilterDetectors widget
This widget in the upper left gives you access to the most important
parameters of the filters and event detectors.

\par The Filter/Detector dialogs
You get a dialog for all parameters of each of the filters and event detectors
from the \c %Detectors/Filters menu.
Clicking the buttons of the dialog does the following:
- \c Ok: Applies the new parameter values to the filter/detector and closes the dialog.
- \c Apply: Applies the new parameter values to the filter/detector without closing the dialog.
- \c Reset: Resets the input values to the last accepted values.
- \c Cancel: Closes the dialog without accepting the input.

\par The RePros widget
This widget in the lower right displays the currently running %RePro.
From the \c %RePros menu you can start (\c Run) a %RePro, 
set the options of a %RePro (%Options),
view the display of a %RePro (\c View),
load a new version of the %RePro (\c Load),
or read the %RePro's documentation (\c Help).
%RePros displays messages in the status bar.

\par The RePro dialogs
The %Options menu item of both the \c %RePros and the \c %Macros menus
and the macros buttons launches a dialog to edit parameter values of
a %RePro.
Clicking the buttons of the dialog does the following:
- \c Ok: Applies the new parameter values to the %RePro and closes the dialog.
- \c Apply: Applies the new parameter values to the %RePro without closing the dialog.
     It is up to the implementation of the %RePro whether it uses the new settings immediately.
     In any case the new settings take in effect on the next run of the %RePro.     
- \c Run: Applies the new parameter values and immediately starts the %RePro without closing the dialog.
- \c Defaults: Resets the input values to their default values.
- \c Close: Closes the dialog without accepting the input.
.
A %RePro can be started from the %RePros menu, or from a macro.
Each %RePro called by a macro gets specific parameter settings
as specified in the macros configuration file (see \ref macros).
The instance of a %RePro for which the dialog was opened
will get exactly the values that were entered by the dialog.
The two check boxes at the bottom of the dialog determine
how the new parameter settings are applied to other instances of the %RePro.
If none of the check boxes is set, then only the instance of the %RePro
for which the dialog was called will receive the new parameter settings.
If the first check box is set ("Set values as default") then
the new parameter settings are used as the default values for all
instances of this %RePro. If this %RePro is started from the 
%RePros menu it will have these values set. 
If it is started from a macro then the parameters defined in the
macros configuration file will overwrite the default settings.
If the second check box is set ("Changes overwrite macro options")
then the parameter settings which differ from the initial settings
will overwrite the parameter settings defined in the macros configuration file
of all other instances of this %RePro.
For a %RePro started from a macro 
think of all this as parameters with different priorities.
The parameter settings are applied to the %RePro in the folloowing order:
-# All parameter values are set to their default settings.
-# The parameters defined in the macros configuration file are read.
   These parameters are marked blue in the dialogs.
-# The parameters specified as overwrite-macro parameter (second check box) are read.
   These parameters are marked green in the dialogs.
-# If a dialog was opened for this instance of the %RePro, 
   all parameter values are set according to the dialog.
   %Parameter values that differ from their default setting
   are marked red in the dialogs.


\par The Control widgets
The optional %Control widgets in the lower left display
some general information about the ongoing recording or
alllow you to control some hardware.


\par A recording
A recording is started by pressing \c Enter or \c Return, by selecting
the File->Start Session menu, or
by clicking on the corresponding button provided by a Control widget.

If a recording is started, then the background color of RELACS turns red,
and the recorded traces and events are written into files.
Stopping a recording first launches a dialog where some meta-data can be
specified.
After the recording is stoppped, none of the raw data is saved on disk anymore.
At the very left of the status bar the elapsed time of the session in minutes
is displayed. Further to the right the name of the directory where the data
of the current session are stored is shown.

\par The recording meta-data dialog
This dialog which is launched at the end of a recording gives you
the possibility to enter usefull meta data which are stored 
together with the recorded data.
The dialog can be customized by simply editing the \c relacsplugins.cfg
config file.
This dialog can also be opened from the menu to enter some data in advance
(File->Session Info).
Clicking the buttons of the dialog does the following:
- \c Save: Stop the recording and save all data.
- \c Discard: Stop the recording and erase all data of this recording.
- \c Reset: Resets the input values to their default values on RELACS startup.
- \c Close: Closes the dialog without accepting the input and continue the recording.

\par The Macros widget
Pressing one of the macro buttons or hitting the specified function or escape key
initiates a macro.
A macro is a sequence of %RePros, shell scripts, message windows, and other macros.
The macros can be specified in the macros configuration file
(see \ref macros).
This file can be edited and it can be reloaded during runtime
by the %Macros-Reload menu.
Single %RePros can be started, configured, viewed, or loaded from the %Macros menu
or by pressing \c Shift + the specified function key or escape key.
A running %RePro of a macro can be skipped by pressing \c Alt+S.


\subsection keys Key Shortcuts

- \c Shift+Ctrl+O: Switch to online (data acquisition) mode.
- \c Shift+Ctrl+S: Switch to simulation mode.
- \c Shift+Ctrl+I: Stop all activity (idle mode).
- \c Alt+I: Meta-data dialog.
- \c Alt+Q: Quit %RELACS.
- \c Shift+Ctrl+F: Toggle full-screen mode
	(be careful when using older Qt version (Version < 3.0)!).

%Macros:
- \c ESC: Start the fallback macro.
     You can continue within the interrupted macro by hitting \c R or \c N (see below).
     If RELACS does not have the key focus, \c ESC transfers the key focus to RELACS.
     In this situation press \c ESC twice to start the fallback macro.
     The keyfocus is, however, automatically returned to RELACS within 15 seconds.
- \c F1-F12: Start a macro.
- \c Shift+ESC: Open menu of fallback macro.
- \c Shift+F1-F12: Open macro menu.
- \c S: Skip current %RePro and start the next %RePro of the current macro.
- \c B: ("Break") Pause current macro by starting the fallback macro after the current %RePro finished.
- \c R: ("Resume") Resume macro with the %RePro where it was interrupted by either \c ESC or \c B.
- \c N: ("Resume Next") Resume macro with the %RePro following the one where the macro was interrupted
	by either \c ESC or \c B.

%RePros:
- \c Ctrl+O: If the current %RePro is not the fall-back %RePro 
             of an explicitly marked fallback macro
             then launch options dialog of the current %RePro,
	     otherwise launch options dialog of the previously run %RePro.
- \c Ctrl+V: View previously shown %RePro
- \c Ctrl+H: Show the help text of the currrently running %RePro

%Recording:
- \c Enter, \c Return: Start/stop recording.

Plots:
- \c +: Zoom in by dividing time axis by a factor two.
- \c -: Zoom out by enlarging time axis by a factor two.
- \c PageUp: Move plot window to the left.
- \c PageDown: Move plot window to the right.
- \c Home: Fixed mode, show traces from the last stimulus on 
     (only if RELACS has the key focus, see \c ESC).
- \c Ctrl+F: Fixed mode, show traces from the last stimulus on (independent of key focus).
- \c End: Continuous mode, show always recent data to the very right of the plot window 
     (only if RELACS has the key focus, see \c ESC).
- \c Ctrl+C: Continuous mode, show always recent data to the very right of the plot window 
     (independent of key focus). 
- \c Ctrl+M: Manual settings are not overidden by %RePro settings.
- \c Ctrl+A: The %RePro automatically sets a suitable range.	
- \c Ctrl+1, \c Ctrl+2, \c ..Ctrl+9: Toggle plot of the corresponding trace number on or off 
     (independent of key focus, as long as no plugin is using these keys as well).
- \c 1, \c 2, \c ..9: Toggle plot of the corresponding trace number on or off 
     (only if RELACS has the key focus, see \c ESC).
- \c Ctrl+PageUp: Move plot window to the first data.
- \c Ctrl+PageDown: Move plot window to the most recent data.
- \c Ctrl+Home: Move plot window to the most recent stimulus.
- \c Ctrl+End: Move plot window to the most recent data.
- \c Shift+PageUp: Move plot window to the left relative to the current stimulus.
- \c Shift+PageDown: Move plot window to the right relative to the current stimulus.


\subsection menus Menu

A short description of the RELACS menu:

\b File
 - \b Online: Switch to online (data acquisition) mode.
 - \b Simulate: Switch to simulation mode.
 - \b Idle: Stop all activity.
 - \b Start \b %Session:  Start a recording, 
   i.e. recording data to disk, by executing the \c startsession macro
   (see \ref macros for details).
 - \b Stop \b %Session:  Stop a recording.
   This starts the \c fallback macro (see \ref macros)
   and launches the meta-data dialog.
 - %Session \b Info: Show the dialog that is usually
   launched when stoppping a recording.
 - \b Quit: Quit RELACS.

\b %Plugins
 - %Control \b Dialog: Show the dialog to edit options of the Control widget.
 - %Control \b Help: Display help text for the Control widget.
 - %Model \b Dialog: Show the dialog to edit options of the Model.
 - %Model \b Help: Display help text for the Model.

\b %Devices
Simply a list of the used devices with some of their properties
and current settings.

\b %Detectors/Filters
In this menu you find a submenu for each Filter/detector plugin:
- \b %Options: Launch a dialog that allows you to 
     set parameters of the filter/detector.
- \b Help: Show the help text of the filter/detector (if available).

\b %RePros
 - \b %Options: If the current %RePro is not the fall-back %RePro 
             of an explicitly marked fallback macro
             then launch options dialog of the current %RePro,
	     otherwise launch options dialog of the previously run %RePro.
 - \b View: View previously shown %RePro.
 - \b Help: Show the help text of the currently running %RePro.
.
Then there is list of all loaded %RePros.
Each has the following submenu:
 - \b Run: Run the %RePro.
 - \b %Options: Launch the options dialog.
 - \b View: View the %RePro.
 - \b Load: Reload the %RePro.
 - \b Help: Show the help text.

\b %Macros
 - \b Reload: Reload the current macro configuration file (see \ref macros).
 - \b Load: Load a macro configuration file selected from a file browser (see \ref macros).
 - \b Switch: Switch to another macro configuration file.
 - \b Skip \b %RePro: Skip current %RePro and start the next %RePro of the current macro. 
 - \b Break: Pause current macro by starting the fallback macro after the current %RePro finished.
 - \b Resume: Resume macro with the %RePro where it was interrupted by either \c ESC or \c B (break).
 - \b Resume \b Next: Resume macro with the %RePro following the one where the macro was interrupted
	by either \c ESC or \c B (break).
.
These general commands are followed by a list of available macros
with the following submenu:
 - \b Run: Run the macro.
 - \b %Options: Launch the dialog to set the macro's variables.
.
Then there is a list with the macros commands.
A green circle indicates that the command is enabled
(it will be executed from the macro),
a command marked with a red circle is disabled and 
won't be executed from the macro.
Each command has its own submenu:
 - \b Start %Macro here: Start the macro with the selected command.
 - \b Run only this: Run only the selected command.
 - \b %Options: Launch the options dialog for the selected %RePro or macro (%RePros and macros only).
 - \b View: View the %RePro (%RePros only).
 - \b Load: Reload the %RePro (%RePros only).
 - \b Help: Show the help text of the %RePro (%RePros only).
 - \b Disable: Disable the execution of this command.
 - \b Enable: Enable the execution of this command.

\b View
 - \b Traces: Various commands for customizing the %PlotTrace widget.
   Each trace can be hidden.
 - \b Fullscreen \b Mode: Toggle fullscreen mode.

\b Help
 - \b Help: Show this documentation.
 - \b About: The RELACS version and the authors.


\subsection macrossub Defining and Using Macros

%Macros control the execution of %RePros, other %Macros, and shell scripts.
Several %RePros with specified parameter settings can be 
executed one after the other by combining them in a macro.
%Macros can be easily customized.
Read \ref macros for more on this topic.


\subsection datafiles Recorded Data

Whenever a recording is started, a new directory is created
in which all recorded data are stored.
The directories are named yyyy-mm-dd-aa, where yyyy is the year,
mm the month, dd the day, and aa is aa, ab, ac ... az, ba, bb, ...

RELACS itself creates the following files:

\b traces.sw?: The raw data from the data acquisition board.

\b *-events.dat: Text files with the events.

\b trigger.dat: Text file with information of each stimulus
  and indices into the traces.sw? and *-events.dat files.

\b repros.dat: The executed repros.

\b info.dat: The data from the meta-data dialog.

Each %RePro may write its own files.
Those files are usually used for further data analysis.
See the documentation of the %RePro for further information
(\c Help in the %RePro's submenu).


\subsection relacsconfig RELACS configuration files

There a two configuration files:

\b relacs.cfg: Basic configuration of RELACS.
Setup of the  data acquisition (channels, sampling rate, etc.),
filters, event detectors, attenuators, manipulators, and other devices.

\b relacsplugins.cfg: In this configuration file the options of all plugins including %RePros are stored.
The first section defines the meta-data dialog.


\section pluginconcept RELACS Plugins

RELACS plugins are C++ classes compiled as shared libraries
which are automatically loaded into the RELACS program during startup.
They can be compiled independently of the RELACS program
and reloaded into the running RELACS program.
All parts of RELACS which code something specific for a setup are plugins:
- \b RePro (Research Program): Analyses the acquired data, generates
	and puts stimuli out.
- \b Filter: Filters or detects events (e.g. spikes) in the acquired data.
- \b Control: %Control some hardware, analyze data independently and in parallel to the %RePros,
     or provides some usefull general information about the recording.
- \b Attenuate: Sets the right attenuation level for a requested output intensity.
- \b Attenuator: Sets the attenuation level of an attenuator device.
- \b AnalogOutput: Communication with a data acquisition driver for writing analog data.
- \b AnalogInput: Communication with a data acquisition driver for reading analog data.
- \b Device: Any other device.
- \b Model: Simulate data.


\subsection createrepros2 Create RePro's

Howto write your own %RePro is described in \ref createrepros .


\section relacsprogram2 RELACS for Programmers

If you want to improve RELACS you might want to read \ref relacsprogram first
to get an introduction about the RELACS internals.


\section relacsutilities Utilities

There are a few utility programs (in \c utils/):

- \ref bin2dat : Convert binary data, such as the \c *.sw1 files, into ascii-files.

- \ref scaninf : Scan the \c info.dat files which contain general information 
  about a recording.

*/
