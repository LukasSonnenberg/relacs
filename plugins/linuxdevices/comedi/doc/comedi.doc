/*!
\mainpage Comedi Relacs Plugins

\brief Interfaces to the %comedi data acquisition library for normal analog input and output as well as for dynamic clamp.


\section installcomedi Install Comedi
See www.comedi.org


\subsection installcomedilib Comedilib

-# Download the %comedi sources from the current CVS snapshot to \c /usr/local/src .
When prompted for a password, hit enter.
\code
$ cd /usr/local/src
$ cvs -d :pserver:anonymous@cvs.comedi.org:/cvs/comedi login
$ cvs -d :pserver:anonymous@cvs.comedi.org:/cvs/comedi co comedi
$ cvs -d :pserver:anonymous@cvs.comedi.org:/cvs/comedi co comedilib
$ cvs -d :pserver:anonymous@cvs.comedi.org:/cvs/comedi co comedilib
$ cvs -d :pserver:anonymous@cvs.comedi.org:/cvs/comedi co comedi_calibrate
\endcode
-# Change to the \c comedilib directory:
\code
$ cd comedilib
\endcode
-# Generate the configuration script by calling
\code
$ ./autogen.sh
\endcode
You may ignore warnings and reminders.
-# Configure Comedilib to be installed in \c /usr/lib and \c /usr/include
\code
$ ./configure --prefix=/usr --sysconfdir=/etc
\endcode
If you want to have Comedlib to be installed somewhere else, specify another \c prefix.
You may want to read \c ./configure \c --help as well.
Pay attention to warnings and errors! You might need to install additional software first.
-# Compile and install (as root)
\code
$ make
$ make install
\endcode
-# Create the device files \c /dev/comedi*
\code
$ make dev
\endcode


\subsection installcomedidriver Comedi
-# Change to the \c %comedi directory:
\code
$ cd /usr/local/src/comedi
\endcode
-# Generate the configuration script by calling
\code
$ ./autogen.sh
\endcode
You may ignore warnings and reminders.
-# Configure
\code
$ ./configure --with-linuxdir=/usr/src/linux --enable-kbuild
\endcode
-# Compile and install (as root)
\code
$ make
$ make install
\endcode


\subsection installcomedicalib Comedi_calibrate
-# Change to the \c comedi_calibrate directory:
\code
$ cd /usr/local/src/comedi_calibrate
\endcode
-# Generate the configuration script by calling
\code
$ autoreconv -v -i
\endcode
You may ignore warnings and reminders.
-# Configure
\code
$ ./configure --prefix=/usr --sysconfdir=/etc
\endcode
-# Compile and install (as root)
\code
$ make
$ make install
\endcode



\section udev Properly add Comedi to udev

-# Login as root.
-# Create a new group "comedi":
\code
$ addgroup --system comedi
\endcode
-# Add udev rules to the /etc/udev/rules.d directory:
\code
$ echo 'KERNEL=="comedi*", MODE="0660", GROUP="comedi"' > /etc/udev/rules.d/comedi.rules
\endcode
-# run
\code
$ udevtrigger
\endcode
to apply your new udev rules
-# Add users to the "comedi" group:
\code
$ adduser <username> comedi
\endcode
You need to logout and login again.


\section buffer Resize Comedi buffer

To set the %comedi internal buffers to 640kB do as root:
\code
$ comedi_config -r /dev/comedi16
$ comedi_config --read-buffer 640 --write-buffer 640 /dev/comedi16 ni_pcimio
\endcode
Maybe this should go in \c /etc/rc.local or to some \c udev postprocessing rule.


\section calibration Calibrating your DAQ board

For software calibrated boards (like NI M-Series boards) do as root
\code
$ comedi_soft_calibrate -f /dev/comedi16
\endcode
This calibrates all channels for all ranges.
A file is written to \c /usr/var/lib/comedi/calibrations that contains the calibration
parameter. The ComediAnalogInput and ComediAnalogOutput plugins read this file.

I still need to check hardware calibrated boards (NI E-Series).


\section installrtai Install RTAI and Comedi

Chapter 2, Installation, in the RTAI-Lab tutorial at
https://www.rtai.org/RTAILAB/RTAI-Lab-tutorial.pdf
explains how to install both Comedi and RTAI.

The following is basically a copy of this chapter, with a 
few updates and additions.

\subsection rtaikernel Linux kernel and RTAI patch

-# Download the latest RTAI version (version 3.6) from www.rtai.org
-# Unpack RTAI in /usr/src:
\code
$ cd /usr/src
$ tar xjvf rtai-3.6.2.tar.bz2
$ ln -s rtai-3.6.2 rtai
\endcode
-# Check for available patches. Get a list of all patches for all architectures:
\code
$ find rtai/base/arch/ -name '*.patch' | sort
\endcode
For example, patches for the 2.6.24 kernel are in rtai/base/arch/x86/patches/ !
Decide for a patch, and remember its version number: \c hal-linux-<kernel-version>-*.patch
-# Download a 'vanilla' kernel, e.g. \c linux-2.6.xx.xx.tar.gz from http://www.kernel.org
-# Unpack the kernel
\code
$ tar xzvf linux-2.6.24.7.tar.gz
$ mv /usr/src/linux-2.6.24.7 /usr/src/linux-2.6.24.7-rtai
$ ln -s /usr/src/linux-2.6.24.7-rtai linux
\endcode
-# Patch the kernel
\code
$ cd /usr/src/linux
$ patch -p1 < /usr/src/rtai/base/arch/x86/patches/hal-linux-2.6.24-x86-2.0-07.patch
\endcode
-# Configure the kernel
Get the configuration of you already installed kernel:
\code
$ cp /boot/configXXX .config
\endcode
Run the kernel configuration GUI:
\code
$ make xconfig
\endcode
First, load the local .config file.
Then make the changes described in the RTAI-Lab tutorial:
  - General setup: select "Prompt for development..."
  - General setup: set "Local version" to -rtai
  - Enable loadable module support: select "Enable module support",
    "Module unloading", and "Automatic module loading". Deselect 
    "Module versioning support"; RTAI modules are not version
    dependent.
  - Processor type and features: Select your Subarchitecture Type
    (PC-Compatible) and Processor family. Select "Preemption Model
    (Preemptible kernel (Low-Latency Desktop))". You might need "High
    Memory Support (4GB)" if you use a PCMCIA data acquisition
    card. Deselect "Use register arguments (EXPERIMENTAL)". Possibly
    deselect "Local APIC support on uniprocessors".
  - Power Management options: Select ACPI Support and features
    relevant to your hardware. Leave APM deselected. Leave CPU Frequency
    scaling unselected. Warning: ACPI support may be a problem on
    laptops that use the "screen closed" button to put the computer
    into sleep or standby modes.
  - Keep all other selections.
-# Compile and install the kernel.
Run 
\code
$ make
$ make modules_install
$ make install
\endcode
-# You might need to update third party kernel modules as well,
like for example the ones for your graphics board.
-# On many systems you also need to create a RAM disk image file:
\code
$ cd /boot
$ update-initramfs -c -k 2.6.24.7-rtai
\endcode
This will create \c /boot/initrd.img-2.6.24.7-rtai
-# Update grub menu.
Add
\code
title           RTAI kernel 2.6.24.7
root            (hd0,0)
kernel          /boot/vmlinuz-2.6.24.7-rtai root=/dev/sda1 ro
initrd          /boot/initrd.img-2.6.24.7-rtai
\endcode
to /boot/grub/menu.lst.
Take the location of your root partition in both the "root" line
(hd0,0) and the "kernel" line (/dev/sda1) from the corresponding entry
of the already installed kernel. The "initrd" line is only needed
if you created a RAM disk image file.

\subsection rtaicomedilib Comedilib

Follow the instructions above for installing 
-# \ref installcomedilib
-# \ref installcomedicalib


\subsection rtaifirst RTAI 1st pass

-# Change to the RTAI directory
\code
$ cd /usr/src/rtai
\endcode
-# Configure RTAI by calling
\code
$ make menuconfig
\endcode
for a text based configuration menu or
\code
$ make xconfig
\endcode
for a graphical configuration menu.
Check the following settings:
 - General -> Installation directory: should be set tp \c /usr/realtime
 - General -> Linux source tree: must be set to \c /usr/src/linux
 - General -> RTAI Documentation: select the documentation you want
 - General -> Build RTAI testsuite: select
 - Machine -> Number of CPUs: set to the rigth value. The default is often right.
   If in doubt, look into the file \c /proc/cpuinfo .
 - Add-ons -> Comedi support over LXRT: leave unselected
Then exit and save configuration.
Watch the output while RTAI is configured for possible warnings and errors.
-# Compile and install (as root)
\code
$ make
$ make install
\endcode


\subsection rtaicomedi Comedi

Follow the instructions above for installing 
\ref installcomedidriver .
For configuring Comedi you should use
\code
./configure --with-linuxdir=/usr/src/linux --enable-kbuild --with-rtaidir=/usr/realtime
\endcode


\subsection rtaisecond RTAI 2nd pass

-# Change to the RTAI directory
\code
$ cd /usr/src/rtai
\endcode
-# RTAI expects %comedi include files in \c [prefix]/include/linux,
but comedilib installs them in \c [prefix]/include
and %comedi installs no include files.
Therefore you need to copy the %comedi include files to \c [prefix]/include/linux yourself:
\code
$ cp /usr/local/src/comedi/include/linux/comedi.h /usr/include/linux/
$ cp /usr/local/src/comedi/include/linux/comedilib.h /usr/include/linux/
\endcode
-# Configure RTAI by calling
\code
$ make menuconfig
\endcode
or
\code
$ make xconfig
\endcode
Check the following settings:
 - Add-ons -> Comedi support over LXRT: select
 - Add-ons -> Comedi installation directory: enter the path that was used as the prefix for configuring comedilib.
Then exit and save configuration.
Watch the output while RTAI is configured for possible warnings and errors.
-# Compile and install (as root)
\code
$ make
$ make install
\endcode


*/
